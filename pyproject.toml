[tool.poetry]
name = "dapp-runner"
version = "0.0.0a3"
description = "Golem dapp-runner - a high-level interface for running decentralized applications using the Golem Network."
authors = ["Golem Factory <contact@golem.network>"]
license = "LGPL-3.0"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.8",
  "Topic :: Software Development",
  "Topic :: System :: Distributed Computing",
]
repository = "https://github.com/golemfactory/dapp-runner"
readme = "README.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
default = false
secondary = true

[tool.poetry.dependencies]
python = "^3.8"

appdirs = "^1.4"
click = "^8.1"
dpath = "^2.0"
pyyaml = "^6.0"
shortuuid = "^1.0"
ansicolors = "^1.1.8"
networkx = "^2.8"
yapapi = "^0.10.0"

[tool.poetry.group.dev.dependencies]
autoflake = "^1"
black = "^22.1"
flake8 = "^5"
flake8-docstrings = "^1.6"
mypy = "^0.942"
poethepoet = "^0.13"
pytest = "^7.1"
pytest-asyncio = "^0.18.3"
pytest-cov = "^3.0.0"
liccheck = "^0.7.2"
pytest-mock = "^3.10.0"
setuptools = "*"

[tool.poetry.scripts]
dapp-runner = "dapp_runner.__main__:_cli"

[tool.poe.tasks]
_checks_codestyle_flake8 = "flake8"
_checks_codestyle_isort = "isort --check-only --diff ."
_checks_codestyle_black = "black --check --diff ."
checks_codestyle = ["_checks_codestyle_flake8", "_checks_codestyle_isort", "_checks_codestyle_black"]
checks_typing  = "mypy --install-types --non-interactive --ignore-missing-imports --check-untyped-defs --warn-unused-ignores --show-error-codes ."
_checks_license_export = "poetry export -f requirements.txt -o .requirements.txt"
_checks_license_verify = "liccheck -r .requirements.txt"
checks_license = ["_checks_license_export", "_checks_license_verify"]
checks = ["checks_codestyle", "checks_typing", "checks_license"]
_format_autoflake = "autoflake ."
_format_isort = "isort ."
_format_black = "black ."
format = ["_format_autoflake", "_format_isort", "_format_black"]
tests_ut = "pytest --cov --cov-report html --cov-report term -sv tests/unit"
tests = ["tests_ut"]

[tool.liccheck]
authorized_licenses = [
  "bsd",
  "new bsd",
  "bsd license",
  "apache 2",
  "apache",
  "Apache Software",
  "Apache Software License",
  "MPL-2.0",
  "Mozilla Public License 2.0 (MPL 2.0)",
  "MIT",
  "LGPL",
  "LGPL-3.0-or-later",
  "GNU Lesser General Public License v3 or later (LGPLv3+)",
  "GNU Lesser General Public License v3 (LGPLv3)",
  "Python Software Foundation",
  "ISC",
  "ISC License (ISCL)",
]
unauthorized_licenses = [
  "gpl v3"
]

[tool.autoflake]
recursive = true
in-place = true
remove-all-unused-imports = true
ignore-init-module-imports = true

[tool.isort]
profile = "black"
py_version = 38
known_golem = "goth, yapapi, ya_activity, ya_market, ya_net, ya_payment"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "GOLEM", "FIRSTPARTY", "LOCALFOLDER"]

[tool.black]
target-version = ['py38']

[tool.pytest.ini_options]
asyncio_mode = "auto"
